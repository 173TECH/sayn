# This tutorial is composed of one task group (base)
# Please see the task overview section of the documentation for more details:
# https://173tech.github.io/sayn/tasks/overview/

# Task groups define at minimum a set of tasks
# To run the tutorial, run the command 'sayn run' from the project folder's root
tasks:
  # python
  # here we define a Python task
  # python tasks are stored into the python folder
  # this task loads some data into our SQLite database
  load_data:
    type: python
    class: load_data.LoadData

  # autosql
  # autosql tasks enable to write a SELECT statement and SAYN creates the table / view automatically
  # the SQL queries for those models are stored into the sql folder
  dim_tournaments:
    type: autosql
    file_name: dim_tournaments.sql
    materialisation: table
    destination:
      table: dim_tournaments
    parents:
      - load_data

  dim_arenas:
    type: autosql
    file_name: dim_arenas.sql
    materialisation: table
    destination:
      table: dim_arenas
    parents:
      - load_data

  dim_fighters:
    type: autosql
    file_name: dim_fighters.sql
    materialisation: table
    destination:
      table: dim_fighters
    parents:
      - load_data

  f_battles:
    type: autosql
    file_name: f_battles.sql
    materialisation: table
    destination:
      table: f_battles
    parents:
      - load_data
      - dim_tournaments
      - dim_arenas
      - dim_fighters

  f_fighter_results:
    type: autosql
    file_name: f_fighter_results.sql
    materialisation: table
    destination:
      table: f_fighter_results
    parents:
      - f_battles

  f_rankings:
    type: autosql
    file_name: f_rankings.sql
    materialisation: view
    destination:
      table: f_rankings
    parents:
      - f_fighter_results
